#
# Defines environment variables.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Bjarke Brodin <bjarke@brodin.dk>

# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

export DOTS="$HOME/.dotfiles"
export USERPATH="$DOTS/data/path"
export USERCLASSPATH="$DOTS/data/classpath"

function Reload {
  exec zsh
}

function ExportEnvVar {
  #todo: validate the key, potentially confirm overrides
  eval "export $1=""'$2'"""
}

function AppendToClasspath {
  export CLASSPATH="$CLASSPATH:$1"
}

function AppendToPath {
  export PATH="$PATH:$1"
}

function PathAdd { 
  echo "$1" >> $USERPATH
  AppendToPath "$1"
}

function PathEdit {
  vim $USERPATH
}

function ClasspathAdd {
  echo "$1" >> $USERCLASSPATH
  AppendToClasspath "$1"
}

function ClasspathEdit {
  vim $USERCLASSPATH
}

# Set ENV 
ExportEnvVar PGUSER "postgres"
ExportEnvVar PGPASSWORD "postgres"
ExportEnvVar ALGS "$HOME/Algorithms"
ExportEnvVar KATTIS "$ALGS/Kattis"

# Set CLASSPATH
for line in $(cat "$USERCLASSPATH") 
do 
  AppendToClasspath "$line"
done

# Set PATH after, since path may depend on ENV - can this dependency be broken?
for line in $(cat "$USERPATH")
do 
  AppendToPath "$line"
done
